@model PortfolioMyriam.Models.ProjectViewModel
@using PortfolioMyriam.Models.Enums
@using PortfolioMyriam.Models.HelperClasses

@{
    ViewData["Title"] = "Details";
}

<div class="container-centered spacer-top spacer-bottom">

    <div class="portfolio-item-centered">
        <h4>@Html.DisplayFor(model => model.Title)</h4>
        <hr />
        <p>
            @Html.DisplayFor(model => model.Description)
        </p>
        <img src="@Model.Image" />
        <dl></dl>

    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PortfolioItems.First().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PortfolioItems.First().Description)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PortfolioItems)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        <a asp-action="Details" asp-controller="Portfolio" asp-route-id="@item.Id">Details</a>
                        @await Html.PartialAsync("../Portfolio/AdminEditPartial", item)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        @if (User.IsInRole(Roles.Admin))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> <span>|</span>
        }

        <a asp-action="Index"><i class="fas fa-arrow-left"></i> Back to List</a>
    </div>
</div>